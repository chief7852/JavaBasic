package i_collection;

import java.util.ArrayList;
import java.util.Scanner;

public class ArrayListClass 
{
	public static void main(String[] args) 
	{
		/* 
		 * collection 프레임워크
		 * 
		 * boolean add(Object obj) : 마지막 위치에 객체를 추가 후 성공여부를 반환한다.
		 * void add(int index, Object obj) : 지적된 위치에 객체를 추가한다.(끼워넣기)
		 * Object set(int index, Object obj): 지정된 위치에 객체를 저장 후 기존 객체를 반환한다.(수정)
		 * Object get(int index) : 지정된 위치의 객체를 반환한다.(위치반환)
		 * int size() : 저장된 객체의 수를 반환한다.(== length)
		 * boolean remove(int index) :지정된 위치의 객체를 제거한다.(삭제)
		 */
		
		ArrayList sample = new ArrayList();
		
											//(arraylist는 타입상관없이 저장가능)   대신 값을 꺼낼때 타입을 예측할수가없다 
		sample.add("abc");
		sample.add(100);
		sample.add(new Scanner(System.in));
		
		
											//따라서 제네릭을 사용하는것을 권장한다. '<>' 이것이 제네릭
		ArrayList<Integer> list = new ArrayList<>();
											//제네릭에는 참조형 타입만가능하다(기본형 사용불가능) Integer는 int를 대신할수 있는 클래스라서 사용가능하다.
		list.add(10);
//		list.add("d");    컴파일에러 
		list.add(20);
		System.out.println(list.add(30));
		System.out.println(list);
		
		
		
		list.add(1, 40);
		
		
		
		
	}
}
